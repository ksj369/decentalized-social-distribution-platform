"""
Django settings for lost project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import socket

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-i#2=f&&k(@7_gb)(qx6medcy*e4$3j+1cg19@v6qjbjftk9857"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "lostapp.apps.LostappConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "markdownx",
    "rest_framework",
    "drf_spectacular",
]

REST_FRAMEWORK = {
    # your other DRF settings here
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "lost.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        # 'DIRS': [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "lost.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "level": "DEBUG",  # Capture all messages of level DEBUG and higher
            "class": "logging.StreamHandler",  # Use the StreamHandler to output to the console
            "formatter": "simple",  # Use the 'simple' formatter (defined below)
        },
    },
    "formatters": {
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",  # Use the new-style string formatting
        },
    },
    "loggers": {
        "": {  # This is the root logger
            "handlers": ["console"],  # Use the 'console' handler, defined above
            "level": "DEBUG",  # Capture all messages of level DEBUG and higher
            "propagate": True,  # Propagate messages to ancestor loggers (not relevant for the root logger)
        },
    },
}


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Profile picture directory
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  # Directory where uploaded media is saved.
MEDIA_URL = "media/"  # Public URL at the browser

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# The following piece of codes are written with the help from ChatGPT, "How to include images in their posts created in CommonMark ", 2024-02-23
MARKDOWNX_MARKDOWN_EXTENSIONS = [
    "markdown.extensions.extra",
    "markdown.extensions.codehilite",
    "markdown.extensions.toc",
]

MARKDOWNX_URLS_PATH = "/markdownx/markdownify/"
MARKDOWNX_UPLOAD_URLS_PATH = "/markdownx/upload/"

MARKDOWNX_UPLOAD_MAX_SIZE = 5 * 1024 * 1024  # 5MB
MARKDOWNX_UPLOAD_CONTENT_TYPES = ["image/jpeg", "image/png", "image/gif"]

MARKDOWNX_MARKDOWN_EXTENSIONS_CONFIGS = {
    "markdown.extensions.codehilite": {
        "linenums": False,
        "guess_lang": False,
    },
}

MARKDOWNX_MARKDOWN_EXTENSIONS += ["markdown.extensions.fenced_code"]

HOSTNAME = "http://127.0.0.1:8000/"
username = "lostapp"
password = "lostandfound"

CORS_ALLOW_ALL_ORIGINS = True